#!/bin/bash

install_programs__linux() {
  sudo apt update

  sudo apt install \
    ripgrep \
    fzf \
    kitty \
    tmux \
    htop \
    zoxide \
    exa \
    expect \
    tldr \
    snapd

  # TODO: this feels dangerous...
  # echo "getting completions for exa..."
  # curl https://raw.githubusercontent.com/ogham/exa/master/completions/zsh/_exa > ~/.zsh/_exa

  # get the content for tldr
  tldr --update

  # install snaps
  snap install glow shfmt
}

# More info here: https://brew.sh/
install_programs__mac() {

  function brewfileInfo() {
    awk '
    BEGIN {lineType = ""}
    {if (lineType != $1) {
      lineType = $1
      description = ""
      if (lineType == "tap") {
        description = "(additional sources for packages)"
      } else if (lineType == "brew") {
        description = "(packages that you use on the command line)" 
      } else {
        description = "(GUI applications)" 
      }
      print $1,description;
    }}
    {gsub(/"|,/, ""); print "  -",$2}' $1
  }

  function installPackages() {
    BREWFILE="./Brewfile"

    brewfileInfo $BREWFILE
    echo "\nDownloading required packages...\n"
    brew bundle install --file=$BREWFILE
  }

  # Do the thing
  if type brew >/dev/null; then
    echo "Homebrew installation found."
  else
    echo "Installing Homebrew..."
    curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
  fi

  echo "Installing the following packages: \n"
  installPackages

  if [[ $? -ne 0 ]]; then
    echo "Something went wrong."
  fi
}

# programs
install_deno() {
  curl -fsSL https://deno.land/x/install/install.sh | sh
  # generate completions file and stick it in `~/.zsh`
  # WARN: this assumes that `~/.zsh` exists
  deno completions zsh >~/.zsh/_deno
}

install_go() {
  # eradicate old installations
  rm -rf /usr/local/go
  wget -c https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz -O - | sudo tar --extract --ungzip -C /usr/local
  echo "it's working if you see a version number below"
  go version
}

install_rust() {
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
  # install completions for `cargo`
  rustup completions zsh cargo >~/.zsh/_cargo
}

install_broot() {
  # a directory browser
  cargo install broot
  # run `broot` command to have it make its own config file
  # NOTE: it will also try to add a line to `.zshrc` to source something. that's already taken care of.
  broot
}

install_neovim() {
  git -C $HOME/neovim clone https://github.com/neovim/neovim && cd $HOME/neovim
  echo "installing build dependencies -> https://github.com/neovim/neovim/wiki/Building-Neovim#build-prerequisites"
  # linux
  sudo apt install ninja-build gettext libtool libtool-bin autoconf automake cmake g++ pkg-config unzip curl doxygen
  # TODO: installing dependencies on mac
  echo "building neovim"
  make CMAKE_BUILD_TYPE=RelWithDebInfo
  sudo make install
  # if that didn't work, show some help
  if [[ $? -eq 1 ]]; then
    echo "Something went wrong. Check the docs -> https://github.com/neovim/neovim/wiki/Installing-Neovim#install-from-source"
  fi
}

install_lazygit() {
  git clone https://github.com/jesseduffield/lazygit.git $HOME/lazygit && cd $HOME/lazygit
  # install lazygit into `~/go/bin/lazygit`
  # TODO: can I have go install the binary produced somewhere directly?
  go install
  # TODO how gross is it to symlink a binary to a different location just so I can reuse a path on $PATH?
  ln -s $HOME/go/bin/lazygit ~/bin/lazygit
  # TODO: update lazygit config path so it can be shared between macos and linux
}

# nerdfont
# TODO: automate this
# go to nerdfont, download a zip of a font, unpack it, open a font file with a gui, install it, go to gnome-tweaks to use it

# linux only
set_default_terminal() {
  echo "set kitty as the default terminal"
  sudo update-alternatives --config x-terminal-emulator
}

# install_programs__linux
# install_deno
# install_rust
# install_go
# install_neovim
# install_broot
# install_lazygit
# set_default_terminal
